package moduloClientes;


import ejercicio.tiendaciclismo.Archivos;
import ejercicio.tiendaciclismo.Menu;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class ClientesVentana extends javax.swing.JFrame {
    
    
    DefaultTableModel model = new DefaultTableModel();
    

    private Archivos arch= new Archivos();
    private OperacionesCliente operacion= new OperacionesCliente();
  
   
    
    public ClientesVentana() throws IOException {
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        initComponents();
        model.addColumn("Codigo");
        model.addColumn("Nombre");
        model.addColumn("Apellidos");
        model.addColumn("Telefono");
        model.addColumn("Correo");
        model.addColumn("Provincia");
        tablaClientes.setModel(model);
        cargarClientesTabla();
        
       }
  
     private boolean confirmacion(){
        int opcion = JOptionPane.showConfirmDialog(jPanel1,
                    "¿Desea realizar la acción?",
                    "Confirmación",
                    JOptionPane.OK_CANCEL_OPTION);

            if (opcion == JOptionPane.OK_OPTION) {
                return true;
            } else {
                return false;
            }
    }
    public void cargarClientesTabla(){
            
            operacion.ClientesArchivo(arch.leer("Clientes.csv"));
            for (Cliente cliente:operacion.listaClientes){
            Object[] fila={cliente.getCodigo(),cliente.getNombre(),cliente.getApellidos(),cliente.getTelefono(),cliente.getCorreo(),cliente.getProvincia()};
            model.addRow(fila);
        
            }
    }
     public void iniciarTablas(ArrayList<Cliente>lista){
         for (Cliente cliente:lista){
            Object[] fila={cliente.getCodigo(),cliente.getNombre(),cliente.getApellidos(),cliente.getTelefono(),cliente.getCorreo(),cliente.getProvincia()};
            model.addRow(fila);
         }    
 }
     
     public JTable obtenerTabla(){
         return tablaClientes;
     }

     public void limpiarTabla(JTable tabla){     
         DefaultTableModel modeloTabla = (DefaultTableModel) tabla.getModel();        
         modeloTabla.setRowCount(0);  // Elimina todas las filas del modelo        
           }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        botonBuscar = new javax.swing.JButton();
        botonAgregar = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        textoFiltro = new javax.swing.JTextField();
        comboxFiltro = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        botonVolver = new javax.swing.JButton();

        jScrollPane1.setViewportView(jEditorPane1);

        jScrollPane3.setViewportView(jTextPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaClientes.setAutoCreateRowSorter(true);
        tablaClientes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane2.setViewportView(tablaClientes);

        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        botonAgregar.setText("Agregar Cliente");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        botonModificar.setText("Modificar Cliente");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar Cliente");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        textoFiltro.setToolTipText("");
        textoFiltro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                textoFiltroFocusGained(evt);
            }
        });
        textoFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoFiltroActionPerformed(evt);
            }
        });
        textoFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textoFiltroKeyTyped(evt);
            }
        });

        comboxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Filtro", "Codigo", "Nombre" }));
        comboxFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboxFiltroActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CLIENTES");

        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonVolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonBuscar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botonAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(botonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
            try{
               DefaultTableModel modeloTabla = (DefaultTableModel) tablaClientes.getModel();                
               int filaSeleccionada=tablaClientes.getSelectedRow();
               if (filaSeleccionada!=-1){
                   if (confirmacion()){                   
                       operacion.eliminarCliente(operacion.getClientes().get(filaSeleccionada).getCodigo());       
                       modeloTabla.removeRow(filaSeleccionada);
               }}else{                             
                   JOptionPane.showMessageDialog(jPanel1, "Cliente no seleccionado");
               }
            }catch (Exception e){
                JOptionPane.showMessageDialog(jPanel1, "Debe seleccionar una fila.");
            }
    
        
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void comboxFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboxFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboxFiltroActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        // TODO add your handling code here:
        AgregarClienteVentana vent1= new AgregarClienteVentana();
        vent1.setVisible(true);
        this.setVisible(false);
        //this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
 
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaClientes.getModel();
        int filaSeleccionada=tablaClientes.getSelectedRow();
        if (filaSeleccionada!=-1){ 
            ModificarClienteVentana ventanaModificar= new ModificarClienteVentana ();       
            ventanaModificar.setFilaSeleccionada(filaSeleccionada);
            ventanaModificar.setVisible(true);
            this.setVisible(false);}
        else{                    
            JOptionPane.showMessageDialog(jPanel1, "Cliente no seleccionado");
        }

    }//GEN-LAST:event_botonModificarActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
                    
        String filtro = (String) comboxFiltro.getSelectedItem();
        
        if (filtro!="Filtro"){
            if (filtro=="Codigo"){
                if (!textoFiltro.getText().isEmpty()){
                    limpiarTabla(tablaClientes);
                    int codigoBuscar= Integer.parseInt(textoFiltro.getText());
                    ArrayList<Cliente> clientesBuscados= operacion.buscarCodigoCliente(codigoBuscar);
                    for (Cliente cliente:clientesBuscados){
                    Object[] fila={cliente.getCodigo(),cliente.getNombre(),cliente.getApellidos(),cliente.getTelefono(),cliente.getCorreo(),cliente.getProvincia()};
                     model.addRow(fila);}
                   
                }else{
                    JOptionPane.showMessageDialog(jPanel1, "Debe ingresar un numero de codigo");
                }
            }
            if (filtro=="Nombre"){
                if (!textoFiltro.getText().isEmpty()){
                    limpiarTabla(tablaClientes);
                    String nombreBuscar=textoFiltro.getText();
                    ArrayList<Cliente> clientesBuscados= operacion.buscarNombreCliente(nombreBuscar);
                    for (Cliente cliente:clientesBuscados){
                    Object[] fila={cliente.getCodigo(),cliente.getNombre(),cliente.getApellidos(),cliente.getTelefono(),cliente.getCorreo(),cliente.getProvincia()};
                     model.addRow(fila);}
                }else{
                    JOptionPane.showMessageDialog(jPanel1, "Debe ingresar un nombre");

                }
            }
            
        } else{
            JOptionPane.showMessageDialog(jPanel1, "Debe seleccionar un filtro para buscar");
        }

    }//GEN-LAST:event_botonBuscarActionPerformed

    private void textoFiltroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_textoFiltroFocusGained
        
    }//GEN-LAST:event_textoFiltroFocusGained

    private void textoFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoFiltroKeyTyped

        String filtro = (String) comboxFiltro.getSelectedItem();
        if (filtro=="Codigo"){
            char numero = evt.getKeyChar();
            if (!(Character.isDigit(numero)) || (numero == KeyEvent.VK_BACK_SPACE) || (numero == KeyEvent.VK_DELETE)){
            evt.consume();}
        }
        if (filtro=="Nombre"){
            char letra = evt.getKeyChar();
            if ((Character.isDigit(letra)) || (letra == KeyEvent.VK_BACK_SPACE) || (letra == KeyEvent.VK_DELETE)){
            evt.consume();}
        }
            
                }//GEN-LAST:event_textoFiltroKeyTyped

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        Menu ventana = new Menu();
        ventana.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_botonVolverActionPerformed

    private void textoFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoFiltroActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientesVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientesVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientesVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientesVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ClientesVentana().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(ClientesVentana.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton botonVolver;
    private javax.swing.JComboBox<String> comboxFiltro;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTextField textoFiltro;
    // End of variables declaration//GEN-END:variables
}
