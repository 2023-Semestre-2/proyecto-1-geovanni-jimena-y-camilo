/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package moduloProductos;


import ejercicio.tiendaciclismo.Archivos;
import ejercicio.tiendaciclismo.Menu;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Clase que representa la ventana de registro y búsqueda de productos y artículos.
 * Permite visualizar, buscar y editar información sobre productos y artículos en la tienda.
 * 
 * @author Jimena Mendez
 */
public class ProductosVentana extends javax.swing.JFrame{
    // Variables para gestionar las tablas y la lógica de la ventana
    DefaultTableModel tablaProducto=new DefaultTableModel();
    DefaultTableModel tablaArticulo=new DefaultTableModel();
    private Archivos reg = new Archivos();
    private RegistroProductos registro = new RegistroProductos();
    

    /**
     * Crea una nueva instancia de la clase ProductosVentana.
     * Inicializa y muestra la interfaz gráfica de registro y búsqueda de productos y artículos.
     */
    public ProductosVentana() {
        registro.ArticulosArchivo(reg.leer("Articulos.csv"));
        registro.ProductosArchivo(reg.leer("tiposProductos.csv"));
        
        initComponents();
        setLocationRelativeTo(null);
            setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            String productos[]={"Código","Nombre"};
            String articulos[]={"Código","Producto","Nombre","Tipo","Tamaño","Marca","Precio","Cantidad"};

            tablaProducto.setColumnIdentifiers(productos);
            tablaArticulo.setColumnIdentifiers(articulos);

            jTable1.setModel(tablaArticulo);
            jTable2.setModel(tablaProducto);

            jTable1.setDefaultEditor(Object.class, null);
            jTable2.setDefaultEditor(Object.class, null);

            iniciarTablas();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Registro de productos");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 17, -1, -1));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(698, 84, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Producto", "Nombre", "Tipo", "Tamaño", "Marca", "Precio", "Cantidad"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 158, 672, 400));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo", "Nombre"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 158, 284, 400));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Productos");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 127, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Opciones");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1105, 158, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Artículos");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 127, -1, -1));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Editar Productos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1063, 204, -1, -1));

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton3.setText("Editar Artículos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1072, 249, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 87, 225, -1));

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(414, 87, 266, 23));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Código:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 87, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Nombre:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 87, -1, -1));

        jButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton4.setText("Regresar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1105, 24, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("imagenes/comun.jpg")));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1219, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Maneja el evento de clic en el botón "Buscar".
     * Realiza la búsqueda de productos y artículos según los criterios ingresados.
     * 
     * @param evt Evento de acción generado por el clic en el botón.
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!jTextField3.getText().isEmpty() && !jTextField1.getText().isEmpty()){
            ArrayList<Articulo> articulosBuscados=new ArrayList<>();
            ArrayList<TipoProducto> productosBuscados=new ArrayList<>();
            if (verificarNombre(jTextField3.getText())){
                articulosBuscados=registro.buscarNombreArticulo(jTextField3.getText());
                productosBuscados=registro.buscarNombreProducto(jTextField3.getText());
           
            }else{
                JOptionPane.showMessageDialog(jPanel1, "El nombre contiene caracteres no permitidos.");
                return;
            }
                
            if(esEntero(jTextField1.getText())){
                articulosBuscados.addAll(registro.buscarCodigoArticulo(Integer.parseInt(jTextField1.getText())));
                productosBuscados.addAll(registro.buscarCodigoProducto(Integer.parseInt(jTextField1.getText())));
                
            }else{
                JOptionPane.showMessageDialog(jPanel1, "Debe ingresar el codigo como un numero entero.");
                return;
            }
            
            if (!articulosBuscados.isEmpty() || !productosBuscados.isEmpty()){
                seleccionaArticulos(articulosBuscados);
                seleccionaProductos(productosBuscados);
            }else{
                if(!articulosBuscados.isEmpty()){
                    seleccionaArticulos(articulosBuscados);
                }else{
                    if (!productosBuscados.isEmpty()){
                        seleccionaProductos(productosBuscados);
                    }else{
                        JOptionPane.showMessageDialog(jPanel1, "Los datos no se encuentran entre los productos o artículos.");
                    
                    }
                }
            }
        }else{
            if (!jTextField3.getText().isEmpty()){
                if (verificarNombre(jTextField3.getText())){
                    ArrayList<Articulo> articulosBuscados=new ArrayList<>();
                    ArrayList<TipoProducto> productosBuscados=new ArrayList<>();
                    articulosBuscados=registro.buscarNombreArticulo(jTextField3.getText());
                    productosBuscados=registro.buscarNombreProducto(jTextField3.getText());
                    if (articulosBuscados==null && productosBuscados==null){
                        JOptionPane.showMessageDialog(jPanel1, "El nombre no se encuentra entre los productos o artículos.");
                    }else{
                        if(articulosBuscados!=null){
                            seleccionaArticulos(articulosBuscados);
                        }
                        if (productosBuscados!=null){
                            seleccionaProductos(productosBuscados);
                        } 
                    }
                }else{
                    JOptionPane.showMessageDialog(jPanel1, "El nombre contiene caracteres no permitidos.");
                }
            }else{
                if (!jTextField1.getText().isEmpty()){
                    if (esEntero(jTextField1.getText())){
                        ArrayList<Articulo> articulosBuscados=new ArrayList<>();
                        ArrayList<TipoProducto> productosBuscados=new ArrayList<>();
                        articulosBuscados=registro.buscarCodigoArticulo(Integer.parseInt(jTextField1.getText()));
                        productosBuscados=registro.buscarCodigoProducto(Integer.parseInt(jTextField1.getText()));
                        if (articulosBuscados==null && productosBuscados==null){
                            JOptionPane.showMessageDialog(jPanel1, "El nombre no se encuentra entre los productos o artículos.");
                        }else{
                            if(articulosBuscados!=null){
                                seleccionaArticulos(articulosBuscados);
                            }
                            if (productosBuscados!=null){
                                seleccionaProductos(productosBuscados);
                            }
                        }
                    }else{
                        JOptionPane.showMessageDialog(jPanel1, "Debe ingresar el codigo como un numero entero.");
                    }
                }else{
                    tablaArticulo.setRowCount(0);
                    tablaProducto.setRowCount(0);
                    iniciarTablas();            
            
                }
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * Selecciona y muestra en la tabla de artículos los artículos específicos encontrados durante la búsqueda.
     * Evita la duplicación de artículos en la tabla.
     * 
     * @param articulos Lista de artículos encontrados durante la búsqueda.
     */
    private void seleccionaArticulos(ArrayList<Articulo> articulos){
        tablaArticulo.setRowCount(0);
        //Verificar que el Arraylist no tenga articulos repetidos
        ArrayList<Articulo> listaSinDuplicados = new ArrayList<>();

        for (Articulo elemento : articulos) {
            if (!listaSinDuplicados.contains(elemento)) {
                listaSinDuplicados.add(elemento);
            }
        }
        
        
        //Agrega los articulos buscados
        for (Articulo art:listaSinDuplicados){
            Object[] filaArt={art.getCodigo(),art.getCodigoTipoProducto(),art.getNombre(),art.getTipo(),art.getTamano(),art.getMarca(),art.getPrecio(),art.getCantidad()};
            tablaArticulo.addRow(filaArt);
        }
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }
    
    /**
     * Selecciona y muestra en la tabla de productos los tipos de productos específicos encontrados durante la búsqueda.
     * Evita la duplicación de tipos de productos en la tabla.
     * 
     * @param productos Lista de tipos de productos encontrados durante la búsqueda.
     */
    private void seleccionaProductos(ArrayList<TipoProducto> productos){
        tablaProducto.setRowCount(0);
        //Verificar que el Arraylist no tenga productos repetidos
        
        ArrayList<TipoProducto> listaSinDuplicados = new ArrayList<>();

        for (TipoProducto elemento : productos) {
            if (!listaSinDuplicados.contains(elemento)) {
                listaSinDuplicados.add(elemento);
            }
        }
        
        for (TipoProducto producto:listaSinDuplicados){
            Object[] fila={producto.getCodigo(),producto.getNombre()};
            tablaProducto.addRow(fila);
        }
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }


    /**
     * Verifica si un nombre contiene solo letras.
     * 
     * @param nombre El nombre a verificar.
     * @return `true` si el nombre contiene solo letras, `false` de lo contrario.
     */
    private boolean verificarNombre(String nombre) {
        // Utilizar una expresión regular para verificar que el nombre solo tenga letras
        String regex = "^[a-zA-Z]+$";
        return Pattern.matches(regex, nombre);
    }
    
    /**
     * Verifica si una cadena es un número entero.
     * 
     * @param cadena La cadena a verificar.
     * @return `true` si la cadena es un número entero, `false` de lo contrario.
     */
    public static boolean esEntero(String cadena) {
        try {
            // Intentar convertir la cadena a un entero
            Integer.valueOf(cadena);
            // Si la conversión es exitosa, la cadena es un entero
            return true;
        } catch (NumberFormatException e) {
            // Si ocurre una excepción, la cadena no es un entero
            return false;
        }
    }
    
    /**
     * Maneja el evento de clic en el botón "Editar Productos".
     * Abre la ventana de edición de productos y cierra la ventana actual.
     * 
     * @param evt Evento de acción generado por el clic en el botón.
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        EditarProducto ventanaProducto=new EditarProducto();
        ventanaProducto.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * Maneja el evento de clic en el botón "Editar Artículos".
     * Abre la ventana de edición de artículos y cierra la ventana actual.
     * 
     * @param evt Evento de acción generado por el clic en el botón.
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        EditarArticulo ventanaArticulo=new EditarArticulo();
        ventanaArticulo.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Menu m=new Menu();
        m.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed
    
    
    
    /**
     * Inicializa las tablas con datos iniciales de productos y artículos.
     */
    private void iniciarTablas(){//En esta funcion se agregan los datos del arraylist a la tabla
        
        //Datos de los productos
        for (TipoProducto producto:registro.getTiposProductos()){
            Object[] fila={producto.getCodigo(),producto.getNombre()};
            tablaProducto.addRow(fila);
        }
        
        
        for (Articulo art:registro.getArticulos()){
            Object[] filaArt={art.getCodigo(),art.getCodigoTipoProducto(),art.getNombre(),art.getTipo(),art.getTamano(),art.getMarca(),art.getPrecio(),art.getCantidad()};
            tablaArticulo.addRow(filaArt);
        }
        
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
               
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductosVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductosVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductosVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductosVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductosVentana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    static class setVisible {

        public setVisible() {
        }
    }
}
